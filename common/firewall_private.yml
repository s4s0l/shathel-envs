- name: Get private eth0 interface name
  shell: ip addr show | grep {{private_ip}} | cut -f2 | awk '{ print $7 }' | head
  register: public_if_name_command
  changed_when: False
  failed_when: "public_if_name_command.rc != 0 or public_if_name_command.stdout == ''"
- name: Save if name
  set_fact:
    public_if: "{{ public_if_name_command.stdout }}"
- name: /etc/iptables dir present
  file:
    path: /etc/iptables
    state: directory
- name: Shathel rules file
  template:
      src: ../common/shathel.iptable.rules.single.interface.j2
      dest: /etc/iptables/shathel.rules
      owner: root
      mode: 0644
  register: rules_command
- name: Adding shathel iptables rules applied on startup
  template:
      src: ../common/shathel.iptable.apply.j2
      dest: /etc/network/if-pre-up.d/shathel-iptables
      owner: root
      mode: 0755
- name: Apply rules
  when: rules_command.changed
  shell: IFACE={{public_if}} /etc/network/if-pre-up.d/shathel-iptables

#  BECAUSE OF https://github.com/docker/libnetwork/pull/1675 needed this:
#- name: Docker workaround script - addition
#  template:
#      src: shathel.iptable.restore.j2
#      dest: /etc/iptables/shathel.restore.sh
#      owner: root
#      mode: 0755
#- name: Docker workaround script - cron
#  cron:
#    name: "docker-workaround"
#    minute: "*"
#    job: "/etc/iptables/shathel.restore.sh >> /var/log/shathel.restore.job.log 2>&1"